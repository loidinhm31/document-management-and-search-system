app:
  eureka:
    url: ${EUREKA_URI}
  auth-service:
    api-key: ${AUTH_SERVICE_API_KEY:document-interaction-api-key}
  document:
    max-size-mb: 50MB
    placeholder:
      processing: classpath:placeholders/processing-thumbnail.png
      error: classpath:placeholders/error-thumbnail.png

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: ${app.document.max-file-size:50MB}
      max-request-size: ${app.document.max-file-size:50MB}
      file-size-threshold: 2MB
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_SERVICE_ENDPOINT_URL}
          jwk-set-uri: ${AUTH_SERVICE_ENDPOINT_URL}/.well-known/jwks.json
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${POSTGRES_URL}/postgres?currentSchema=dms
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  data:
    mongodb:
      uri: mongodb+srv://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_URL}/dms?authSource=admin
  rabbitmq:
    host: ${RABBITMQ_URL}
    port: 5672
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

# Eureka Client
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${app.eureka.url}/eureka
    enabled: true
  instance:
    preferIpAddress: true
    hostname: ${EUREKA_URI}
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20

aws:
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME:dms-doc-s3-dev}
    region: ${AWS_REGION:ap-southeast-1}
    access-key: ${AWS_ACCESS_KEY:test}
    secret-key: ${AWS_SECRET_KEY:test}