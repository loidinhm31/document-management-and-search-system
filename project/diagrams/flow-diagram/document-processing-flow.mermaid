---
config:
  layout: dagre
  theme: default
---
flowchart TD
    subgraph ContentExtractorService["ContentExtractorService"]
        FileChecks["Check if file exists & readable"]
        Factory["DocumentExtractionStrategy.getStrategy"]
    end
    subgraph StrategySelection["Strategy Selection"]
        StrategySelect{"Select Strategy"}
        PDFStrategy["PdfExtractionStrategy (MIME: application/pdf)"]
        RegularStrategy["RegularExtractionStrategy (All non-PDF files)"]
    end
    subgraph PDFProcessing["PDF Processing"]
        PDFCheck{"File Size Check - Large file or not?"}
        PDFLarge["Process Large PDF"]
        PDFRegular["Extract text with PDFTextStripper"]
        SamplePDF["ContentQualityAnalyzer.calculateMetricsForSample"]
        PDFOCRDecision{"OCR needed?"}
        PDFMetricsAnalysis["ContentQualityAnalyzer.analyzeTextQuality"]
        PDFOCRDecision2{"OCR needed?"}
    end
    subgraph RegularProcessing["Regular File Processing"]
        RegularSizeCheck{"File Size Check - Large file or not?"}
        RegularLarge["handleLargeRegularFile"]
        RegularNormal["handleRegularFile"]
        OCRCandidateLarge{"Is OCR candidate? (PPT, PPTX, etc.)"}
        OCRCandidateRegular{"Is OCR candidate? (PPT, PPTX, etc.)"}
        RegularSample["Sample file for OCR decision"]
        RegularOCRDecision{"OCR needed? - based on sample"}
        TikaWithOCR["Tika with OCR enabled"]
        MetricsAnalysis["ContentQualityAnalyzer.analyzeTextQuality"]
        TikaWithoutOCR["Tika with OCR disabled"]
        RegularQualityCheck{"OCR needed?"}
    end
    Start("DocumentProcessService.processDocument") -- SYNC_EVENT/UPDATE_WITH_FILE --> ContentExtract["ContentExtractorService.extractContent"]
    ContentExtract --> FileChecks
    FileChecks --> Factory
    Factory --> StrategySelect
    StrategySelect -- MIME: application/pdf --> PDFStrategy
    StrategySelect -- All other MIME types --> RegularStrategy
    PDFStrategy --> PDFCheck
    PDFCheck -- Yes --> PDFLarge
    PDFCheck -- No --> PDFRegular
    PDFLarge --> SamplePDF
    SamplePDF --> PDFOCRDecision
    PDFOCRDecision -- Yes --> OcrLargeProcessor["OcrLargeFileProcessor.processLargeFile"]
    PDFOCRDecision -- No --> LargeFileProcessor["LargeFileProcessor.processLargeFile"]
    PDFRegular --> PDFMetricsAnalysis
    PDFMetricsAnalysis --> PDFOCRDecision2
    PDFOCRDecision2 -- Yes --> PDFWithOCR["OcrService.processWithOcr"]
    PDFOCRDecision2 -- No --> PDFWithoutOCR["Use PDFTextStripper text"]
    RegularStrategy --> RegularSizeCheck
    RegularSizeCheck -- Yes --> RegularLarge
    RegularSizeCheck -- No --> RegularNormal
    RegularLarge --> OCRCandidateLarge
    OCRCandidateLarge -- Yes --> RegularSample
    OCRCandidateLarge -- No --> LargeFileProcessor
    RegularSample --> RegularOCRDecision
    RegularOCRDecision -- Yes --> OcrLargeProcessor
    RegularOCRDecision -- No --> LargeFileProcessor
    RegularNormal --> OCRCandidateRegular
    OCRCandidateRegular -- Yes --> TikaWithOCR
    TikaWithOCR --> MetricsAnalysis
    MetricsAnalysis --> RegularQualityCheck
    OCRCandidateRegular -- No --> TikaWithoutOCR
    TikaWithoutOCR --> RegularDirectContent["Use extracted content / Basic text extraction"]
    RegularDirectContent --> ReturnExtractedContent["Return DocumentExtractContent"]
    RegularQualityCheck -- Yes --> RegularWithOCR["OcrService.extractTextFromRegularFile"]
    RegularQualityCheck -- No --> RegularTikaContent["Use Tika extracted content"]
    OcrLargeProcessor --> ReturnExtractedContent
    LargeFileProcessor --> ReturnExtractedContent
    PDFWithOCR --> ReturnExtractedContent
    PDFWithoutOCR --> ReturnExtractedContent
    RegularWithOCR --> ReturnExtractedContent
    RegularTikaContent --> ReturnExtractedContent
