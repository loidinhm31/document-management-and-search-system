server {
    listen 80;
    listen [::]:80;
    server_name dms-study.cloud www.dms-study.cloud;
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name dms-study.cloud www.dms-study.cloud;

    # Upload size limit
    client_max_body_size 25M;

    # SSL configuration (added by certbot)
    ssl_certificate /etc/letsencrypt/live/dms-study.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dms-study.cloud/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # Important: Increase buffer sizes for larger requests
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # API proxy for all backend services using regex pattern
    location ~* ^/(auth|document-interaction|document-search)/api/ {
        client_max_body_size 25M;

        # Change from https to http - most common issue
        proxy_pass http://127.0.0.1:8086;
        proxy_http_version 1.1;
        # Remove Origin header that's causing 403 Forbidden
        proxy_set_header Origin "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add longer timeouts for debugging
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Add error logging for troubleshooting
        error_log /var/log/nginx/api_error.log debug;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://dms-study.cloud';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        add_header 'Access-Control-Allow-Credentials' 'true';

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://dms-study.cloud';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Google OAuth2 authorization endpoint
    location /oauth2/authorization/google {
        proxy_pass http://127.0.0.1:8086/oauth2/authorization/google;
        proxy_http_version 1.1;

        # Important: Don't remove Origin header for OAuth flow as it might be verified
        # proxy_set_header Origin "";

        # Preserve original host header
        proxy_set_header Host $host;

        # Pass all important headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Handle cookies properly
        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=None";

        # Add longer timeouts for OAuth which can be slower
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Create detailed debug log
        error_log /var/log/nginx/oauth_debug.log debug;

        # Make sure redirects are maintained
        proxy_redirect off;
    }

    location /login/oauth2/code/ {
        proxy_pass http://127.0.0.1:8086/login/oauth2/code/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Debug logging
        error_log /var/log/nginx/oauth_callback_debug.log debug;
    }

    # Forward all requests to the Docker container
    location / {
        # Proxy to Docker container
        # Use the container's name if using Docker networking, or localhost:PORT if port mapping
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Don't buffer, pass all data directly to client
        proxy_buffering off;
        # Increase timeouts for development purposes
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
    }

    # Special handling for assets to ensure correct MIME types
    location ~* \.(js|css|svg|jpg|jpeg|png|gif|ico|woff|woff2|ttf|eot)$ {
        # Still proxy to Docker container
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        # Add caching headers for static assets
        expires 1y;
        add_header Cache-Control "public, max-age=31536000";
        # Ensure correct content types are served
        include /etc/nginx/mime.types;
    }

    # Handle 404s by passing to React router
    error_page 404 = @fallback;
    location @fallback {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}