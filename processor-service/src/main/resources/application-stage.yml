app:
  base-url: ${FRONTEND_URL}
  ocr:
    data-path: /usr/share/tesseract-ocr/5/tessdata
    chunk-size: 10
    temp-dir: /tmp/ocr
    dpi: 300
    image-type: RGB
    large-size-threshold-mb: 8MB
  pdf:
    quality-threshold: 0.8
    min-text-density: 0.01
    expected-min-chars-per-page: 250
    minimum-text-length: 50  # Minimum text length to consider a PDF as text-based
  email:
    batch-size: 50  # Number of emails per batch

spring:
  data:
    mongodb:
      uri: mongodb+srv://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_URL}/dms?authSource=admin
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${POSTGRES_URL}/postgres?currentSchema=dms
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  rabbitmq:
    addresses: ${RABBITMQ_URL}:5671
    host: ${RABBITMQ_URL}
    port: 5671
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2.0
    publisher-confirm-type: correlated
    publisher-returns: true

  mail:
    host: ${MAIL_SERVER_HOST}
    port: 587
    username: ${MAIL_SERVER_USERNAME}
    password: ${MAIL_SERVER_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

mail-sender:
  from-email: service@dms-study.cloud

opensearch:
  host: ${OPENSEARCH_URL}
  port: 443
  username: ${OPENSEARCH_USERNAME}
  password: ${OPENSEARCH_PASSWORD}
  scheme: https
  aws: true

# RabbitMQ
rabbitmq:
  exchanges:
    document: document.exchange
    notification: notification.exchange
    dlx: dead.letter.exchange
  queues:
    document-process: document-process.queue
    document-process-dlq: document-process.dlq
    email-document: notification.email.document.queue
    email-document-dlq: notification.email.document.dlq
    email-auth: notification.email-auth.queue
    email-auth-dlq: notification.email-auth.dlq
  routing-keys:
    document-process: document-process.routing-key
    email-auth: notification.email-auth.routing-key
    dead-letter: dead.letter.routing-key

aws:
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME}
    region: ${AWS_REGION:ap-southeast-1}
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    temp-dir: ${java.io.tmpdir}/dms-processor